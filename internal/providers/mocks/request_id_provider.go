// Code generated by MockGen. DO NOT EDIT.
// Source: __template__/internal/providers (interfaces: RequestIdProvider)
//
// Generated by this command:
//
//	mockgen -destination mocks/request_id_provider.go -package provider_mocks . RequestIdProvider
//

// Package provider_mocks is a generated GoMock package.
package provider_mocks

import (
	entities "__template__/internal/entities"
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockRequestIdProvider is a mock of RequestIdProvider interface.
type MockRequestIdProvider struct {
	ctrl     *gomock.Controller
	recorder *MockRequestIdProviderMockRecorder
}

// MockRequestIdProviderMockRecorder is the mock recorder for MockRequestIdProvider.
type MockRequestIdProviderMockRecorder struct {
	mock *MockRequestIdProvider
}

// NewMockRequestIdProvider creates a new mock instance.
func NewMockRequestIdProvider(ctrl *gomock.Controller) *MockRequestIdProvider {
	mock := &MockRequestIdProvider{ctrl: ctrl}
	mock.recorder = &MockRequestIdProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRequestIdProvider) EXPECT() *MockRequestIdProviderMockRecorder {
	return m.recorder
}

// Value mocks base method.
func (m *MockRequestIdProvider) Value(arg0 context.Context) *entities.RequestId {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Value", arg0)
	ret0, _ := ret[0].(*entities.RequestId)
	return ret0
}

// Value indicates an expected call of Value.
func (mr *MockRequestIdProviderMockRecorder) Value(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Value", reflect.TypeOf((*MockRequestIdProvider)(nil).Value), arg0)
}

// WithValue mocks base method.
func (m *MockRequestIdProvider) WithValue(arg0 context.Context, arg1 entities.RequestId) context.Context {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WithValue", arg0, arg1)
	ret0, _ := ret[0].(context.Context)
	return ret0
}

// WithValue indicates an expected call of WithValue.
func (mr *MockRequestIdProviderMockRecorder) WithValue(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WithValue", reflect.TypeOf((*MockRequestIdProvider)(nil).WithValue), arg0, arg1)
}
